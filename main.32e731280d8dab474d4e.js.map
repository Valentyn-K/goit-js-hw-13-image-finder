{"version":3,"sources":["webpack:///./js/refs.js","webpack:///./js/clearUlGallery.js","webpack:///./js/apiService.js","webpack:///./js/makeGridItem.js","webpack:///./js/masonry.js","webpack:///./js/drawMarkup.js","webpack:///./js/spiner.js","webpack:///./js/infiniteScrollWithIntersectionObserver.js","webpack:///./js/fetchForInfiniteScroll.js","webpack:///./js/lightBoxHandler.js","webpack:///./js/eventListeners.js","webpack:///./js/handleInputSearchQuery.js","webpack:///./js/ulGalleryHandler.js"],"names":["refs","searchForm","document","querySelector","ulGallery","loadMoreBtn","smallImage","querySelectorAll","spiner","liGridSizer","ioTarget","modal","largeImage","clearUlGallery","innerHTML","page","query","fetchImages","requestParams","this","fetch","then","response","json","parsedResponse","incrementPage","hits","string","resetPage","makeGridItem","webformatURL","likes","largeImageURL","views","comments","downloads","li","createElement","classList","add","divPhotoCard","img","src","setAttribute","divStats","pLikes","textContent","iLikes","appendChild","pViews","iViews","pComment","iComment","pDowload","iDowload","append","masonryInstance","Masonry","itemSelector","columnWidth","percentPosition","gutter","transitionDuration","drawMarkup","imagesArray","images","map","appended","imagesLoaded","on","layout","show","remove","hide","infiniteScroll","target","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","services","console","log","rootMargin","threshold","observe","lightBoxHandler","event","instance","close","addEventListener","debounce","preventDefault","inputValue","value","length","searchQuery","catch","error","datasetLargeURL","dataset","largeurl","basicLightbox","visible"],"mappings":"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","file":"main.32e731280d8dab474d4e.js","sourcesContent":["export const refs = {\r\n  searchForm: document.querySelector('#search-form'),\r\n  ulGallery: document.querySelector('#gallery'),\r\n  loadMoreBtn: document.querySelector('#load-more'),\r\n  smallImage: document.querySelectorAll('.image'),\r\n  spiner: document.querySelector('.spiner'),\r\n  liGridSizer: document.querySelector('.grid-sizer'),\r\n  ioTarget: document.querySelector('#intersection-observer-target'),\r\n  modal: document.querySelector('.modal'),\r\n  largeImage: document.querySelector('.large-image'),\r\n};\r\n\r\n// console.dir(refs.intersectionObserverTarget);\r\n// console.dir(refs.ulGallery);\r\n// console.log(refs.searchForm.query.value);\r\n","import { refs } from './refs.js';\r\n\r\nexport function clearUlGallery() {\r\n  refs.ulGallery.innerHTML = '';\r\n}\r\n","const baseUrl = 'https://pixabay.com/api/';\r\n\r\nexport default {\r\n  page: 1,\r\n  query: '',\r\n  fetchImages() {\r\n    const requestParams = `?image_type=photo&orientation=horizontal&q=${this.query}&page=${this.page}&per_page=12&key=15837694-cfd882bdab50e7e30ec0ef461`;\r\n\r\n    return fetch(baseUrl + requestParams)\r\n      .then(response => response.json())\r\n      .then(parsedResponse => {\r\n        this.incrementPage();\r\n\r\n        return parsedResponse.hits;\r\n      });\r\n  },\r\n  incrementPage() {\r\n    this.page += 1;\r\n  },\r\n  get searchQuery() {\r\n    return this.query;\r\n  },\r\n  set searchQuery(string) {\r\n    this.query = string;\r\n  },\r\n  resetPage() {\r\n    this.page = 1;\r\n  },\r\n};\r\n","const makeGridItem = ({\r\n  webformatURL,\r\n  largeImageURL,\r\n  likes,\r\n  views,\r\n  comments,\r\n  downloads,\r\n}) => {\r\n  const li = document.createElement('li');\r\n  li.classList.add('grid-item');\r\n  li.classList.add('gallery-item');\r\n\r\n  const divPhotoCard = document.createElement('div');\r\n  divPhotoCard.classList.add('photo-card');\r\n\r\n  const img = document.createElement('img');\r\n  img.classList.add('image');\r\n  img.src = webformatURL;\r\n  img.setAttribute('data-largeurl', webformatURL);\r\n\r\n  const divStats = document.createElement('div');\r\n  divStats.classList.add('stats');\r\n\r\n  const pLikes = document.createElement('p');\r\n  pLikes.classList.add('stats-item');\r\n  pLikes.textContent = likes;\r\n\r\n  const iLikes = document.createElement('i');\r\n  iLikes.classList.add('material-icons');\r\n  iLikes.textContent = 'thumb_up';\r\n\r\n  pLikes.appendChild(iLikes);\r\n\r\n  const pViews = document.createElement('p');\r\n  pViews.classList.add('stats-item');\r\n  pViews.textContent = views;\r\n\r\n  const iViews = document.createElement('i');\r\n  iViews.classList.add('material-icons');\r\n  iViews.textContent = 'visibility';\r\n\r\n  pViews.appendChild(iViews);\r\n\r\n  const pComment = document.createElement('p');\r\n  pComment.classList.add('stats-item');\r\n  pComment.textContent = comments;\r\n\r\n  const iComment = document.createElement('i');\r\n  iComment.classList.add('material-icons');\r\n  iComment.textContent = 'comment';\r\n\r\n  pComment.appendChild(iComment);\r\n\r\n  const pDowload = document.createElement('p');\r\n  pDowload.classList.add('stats-item');\r\n  pDowload.textContent = downloads;\r\n\r\n  const iDowload = document.createElement('i');\r\n  iDowload.classList.add('material-icons');\r\n  iDowload.textContent = 'cloud_download';\r\n\r\n  pDowload.appendChild(iDowload);\r\n\r\n  divStats.append(pLikes, pViews, pComment, pDowload);\r\n\r\n  divPhotoCard.append(img, divStats);\r\n\r\n  li.appendChild(divPhotoCard);\r\n  return li;\r\n};\r\nexport default makeGridItem;\r\n","import Masonry from 'masonry-layout';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport '../css/masonry.css';\r\nimport { refs } from './refs.js';\r\n\r\nexport const masonryInstance = new Masonry('#gallery', {\r\n  itemSelector: '.grid-item',\r\n  columnWidth: refs.liGridSizer,\r\n  percentPosition: true,\r\n  gutter: 10,\r\n  transitionDuration: '0.8s',\r\n});\r\n","import Masonry from 'masonry-layout';\r\nimport imagesLoaded from 'imagesloaded';\r\n\r\nimport { refs } from './refs';\r\nimport { clearUlGallery } from './clearUlGallery.js';\r\nimport makeGridItem from './makeGridItem.js';\r\nimport { masonryInstance } from './masonry.js';\r\n\r\nexport function drawMarkup(imagesArray) {\r\n  const images = imagesArray.map(makeGridItem);\r\n  refs.ulGallery.append(...images);\r\n\r\n  masonryInstance.appended(images);\r\n  const imagesLoadedInstance = imagesLoaded(refs.ulGallery);\r\n\r\n  imagesLoadedInstance.on('progress', () => {\r\n    masonryInstance.layout();\r\n  });\r\n}\r\n","import { refs } from './refs.js';\r\nexport default {\r\n  show() {\r\n    refs.spiner.classList.remove('spiner-hidden');\r\n  },\r\n\r\n  hide() {\r\n    refs.spiner.classList.add('spiner-hidden');\r\n  },\r\n};\r\n","import 'intersection-observer';\r\nimport { refs } from './refs.js';\r\nimport { fetchForInfiniteScroll } from './fetchForInfiniteScroll.js';\r\n\r\nexport const infiniteScroll = target => {\r\n  const options = {\r\n    rootMargin: '300px 0px',\r\n    threshold: 0.01,\r\n  };\r\n  const io = new IntersectionObserver((entries, observer) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        fetchForInfiniteScroll();\r\n      }\r\n    });\r\n  }, options);\r\n  io.observe(target);\r\n};\r\n","import services from './apiService.js';\r\nimport { drawMarkup } from './drawMarkup.js';\r\nimport spiner from './spiner.js';\r\n\r\nexport function fetchForInfiniteScroll() {\r\n  spiner.show();\r\n  services.fetchImages().then(imagesArray => {\r\n    console.log(imagesArray);\r\n    drawMarkup(imagesArray);\r\n    spiner.hide();\r\n  });\r\n}\r\n","import * as basicLightbox from 'basiclightbox';\r\nimport { refs } from './refs.js';\r\n\r\nexport function lightBoxHandler(event) {\r\n  console.log(event.target);\r\n  if (event.target === refs.modal) {\r\n    instance.close();\r\n  }\r\n}\r\n","import debounce from 'lodash/debounce.js';\r\nimport * as basicLightbox from 'basiclightbox';\r\n\r\nimport { refs } from './refs.js';\r\nimport { handleInputSearchQuery } from './handleInputSearchQuery.js';\r\nimport { ulGalleryHandler } from './ulGalleryHandler.js';\r\nimport { lightBoxHandler } from './lightBoxHandler.js';\r\n\r\nexport const formInputListener = refs.searchForm.addEventListener(\r\n  'input',\r\n  debounce(handleInputSearchQuery, 500),\r\n);\r\n\r\nexport const ulGalleryListener = refs.ulGallery.addEventListener(\r\n  'click',\r\n  ulGalleryHandler,\r\n);\r\n\r\nexport function lightBoxListener() {\r\n  const visible = instance.visible();\r\n  if (visible) {\r\n    refs.modal.addEventListener('click', lightBoxHandler);\r\n  }\r\n}\r\n","import { refs } from './refs.js';\r\nimport { clearUlGallery } from './clearUlGallery.js';\r\nimport services from './apiService.js';\r\nimport { drawMarkup } from './drawMarkup.js';\r\nimport spiner from './spiner.js';\r\nimport { infiniteScroll } from './infiniteScrollWithIntersectionObserver.js';\r\n\r\nexport function handleInputSearchQuery(event) {\r\n  event.preventDefault();\r\n  clearUlGallery();\r\n  services.resetPage();\r\n  const inputValue = event.target.value;\r\n  if (inputValue.length === 0) {\r\n    clearUlGallery();\r\n    return;\r\n  }\r\n  services.searchQuery = inputValue;\r\n  spiner.show();\r\n\r\n  services\r\n    .fetchImages()\r\n    .then(imagesArray => {\r\n      drawMarkup(imagesArray);\r\n      spiner.hide();\r\n    })\r\n    .catch(error => {\r\n      spiner.hide();\r\n      console.log('Something went wrong!', error);\r\n    });\r\n\r\n  infiniteScroll(refs.ioTarget);\r\n}\r\n","import * as basicLightbox from 'basiclightbox';\r\nimport { refs } from './refs.js';\r\n\r\nexport function ulGalleryHandler(event) {\r\n  if (event.target === refs.ulGallery) {\r\n    return;\r\n  }\r\n  const datasetLargeURL = event.target.dataset.largeurl;\r\n  const instance = basicLightbox.create(`<div class=\"modal\">\r\n    <img class=\"large-image\" src=\"${datasetLargeURL}\" width=\"800\" height=\"600\">\r\n    </div>`);\r\n  instance.show();\r\n}\r\n"],"sourceRoot":""}